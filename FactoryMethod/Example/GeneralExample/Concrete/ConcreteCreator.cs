namespace FactoryMethod.Example.GeneralExample.Concrete
{
    /// <summary>
    /// Создатель (конкретный создатель)
    /// Класс конкретного создателя конкретного продукта, который реализует фабричный метод
    /// ДЛя каждого продукта необходим свой создатель. Конкртеных создателей может быть много.
    ///
    /// В рассмотренном примере с конкретным мессенджерами: TwitterMessanger, InstagramMessanger 
    /// </summary>
    public class ConcreteCreator: Creator
    {
        /// <summary>
        /// Конкретная реализация фабричного метода.
        /// Определяет процесс создания конкретного продукта,
        /// при этом возвращает обобщенный продукт (интерфейс или абстрактный класс продукта)
        /// Благодаря этому появляется возможность обобщеному создателю не зависеть
        /// от конкретных реализаций продукта и создателя этого продукта.
        /// </summary>
        /// <returns>Конкретный продукт, упакованный в виде обобщенного продукта.</returns>
        public override IProduct GeneralFactoryMethod()
        {
            // При необходимости здесь могут быть дополнительные действия 
            // Кроме непсоредственного создания продукта
            return new ConcreteProduct();
        }
    }
}